# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Frontend CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: front/portfolio-app/package-lock.json
    - name: Npm CI
      working-directory: front/portfolio-app
      run: npm ci

    - name: Build
      working-directory: front/portfolio-app
      run: npm run build

    - name: Build and push Docker image
      working-directory: front/portfolio-app
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker build -t portfolio-frontend .
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u $DOCKER_USERNAME --password-stdin
        docker tag portfolio-frontend $DOCKER_USERNAME/portfolio-frontend:latest
        docker push $DOCKER_USERNAME/portfolio-frontend:latest

    - name: Deploy to Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SERVER_SSH_PORT }}
        script: |
            ssh-keyscan ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
            chmod 600 ssh_key
            ssh -i ssh_key ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} '
                docker stop $(docker ps -q --filter ancestor=${{ secrets.DOCKER_USERNAME }}/portfolio-frontend:latest) || true &&
                docker pull ${{ secrets.DOCKER_USERNAME }}/portfolio-frontend:latest &&
                docker run -d -p 80:80 ${{ secrets.DOCKER_USERNAME }}/portfolio-frontend:latest
            '
