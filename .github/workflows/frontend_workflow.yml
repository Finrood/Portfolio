name: Frontend CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Cache Node.js modules
      uses: actions/cache@v4
      id: cache-node-modules
      with:
        path: front/portfolio-app/node_modules
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('front/portfolio-app/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: front/portfolio-app/package-lock.json

    - name: Install Dependencies
      working-directory: front/portfolio-app
      run: npm ci

    - name: Build
      working-directory: front/portfolio-app
      run: npm run build

  docker-and-deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub and build/push Docker image
      working-directory: front/portfolio-app
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u $DOCKER_USERNAME --password-stdin
        docker build -t $DOCKER_USERNAME/portfolio-frontend:latest .
        docker push $DOCKER_USERNAME/portfolio-frontend:latest

    - name: Deploy to Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SERVER_SSH_PORT }}
        script: |
          ssh-keyscan ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ssh_key
          chmod 600 ssh_key
          ssh -i ssh_key ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_IP }} '
            docker stop $(docker ps -q --filter ancestor=${{ secrets.DOCKER_USERNAME }}/portfolio-frontend:latest) || true &&
            docker pull ${{ secrets.DOCKER_USERNAME }}/portfolio-frontend:latest &&
            docker run -d -p 80:80 -p 443:443 -v ~/certbot/certificates:/app/cert:ro ${{ secrets.DOCKER_USERNAME }}/portfolio-frontend:latest
          '

